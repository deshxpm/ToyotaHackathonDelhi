Metadata-Version: 1.1
Name: crispy
Version: 0.7.3
Summary: Core-Level Spectroscopy Simulations in Python
Home-page: https://github.com/mretegan/crispy
Author: Marius Retegan
Author-email: marius.retegan@esrf.eu
License: MIT
Download-URL: https://github.com/mretegan/crispy/releases
Description: Crispy is a modern graphical user interface to calculate core-level spectra using the semi-empirical multiplet approaches implemented in `Quanty <http://quanty.org>`_. The interface provides a set of tools to generate input files, submit calculations, and plot the resulting spectra.
        
        |release| |downloads| |DOI| |licence|
        
        .. |downloads| image:: https://img.shields.io/github/downloads/mretegan/crispy/total.svg
            :target: https://github.com/mretegan/crispy/releases
        
        .. |release| image::  https://img.shields.io/github/release/mretegan/crispy.svg
            :target: https://github.com/mretegan/crispy/releases
        
        .. |DOI| image:: https://zenodo.org/badge/53660512.svg
            :target: https://zenodo.org/badge/latestdoi/53660512
        
        .. |licence| image:: https://img.shields.io/github/license/mretegan/crispy.svg
            :target: https://github.com/mretegan/crispy/blob/master/LICENSE.txt
        
        .. first-marker
        
        
        .. second-marker
        
        Installation
        ============
        
        Latest Release
        --------------
        
        Using the Package Installers
        ****************************
        The easiest way to install Crispy on Windows and macOS operating systems is to use the installers provided on the project `downloads <http://www.esrf.eu/computing/scientific/crispy/downloads.html>`_ page. The installers bundle Python, the required dependencies, and Crispy. However, because for the moment they are only created when a new release is published, they might lack newly implemented features.
        
        Using pip
        *********
        Pip is the package manager for Python, and before you can use it to install Crispy, you have to make sure that you have a working Python distribution. While Crispy works with both Python 2 and Python 3, you should install Python 3.5 or greater, as in previous versions some of the dependencies like PyQt5 cannot be easily installed using pip. On macOS and Windows you can install Python using the `official <https://www.python.org/downloads>`_ installers. In particular for Windows you should install the 64-bit version of Python, and make sure that during the installation you select to add Python to system's PATH.
        
        Crispy depends on the following Python packages:
        
        * `PyQt5 <https://riverbankcomputing.com/software/pyqt/intro>`_
        * `numpy <http://numpy.org>`_
        * `matplotlib <http://matplotlib.org>`_
        * `h5py <https://www.h5py.org>`_
        * `silx <http://www.silx.org>`_
        
        On current Linux distributions, both Python 2 and Python 3 should be present. Start by checking the installed Python 3 version:
        
        .. code:: sh
        
            python3 -V
        
        If the version number is at least 3.5, you can install Crispy and all dependencies using pip:
        
        .. code:: sh
        
            pip3 install --upgrade --user crispy
        
        For lower Python versions, you will have to use the system's package manager (apt, dnf, pacman, etc.) to install the dependencies. Crispy can then be installed using pip, but this time without the depencies.
        
        .. code:: sh
        
            pip3 install --no-deps --upgrade --user crispy # Python 3
            pip  install --no-deps --upgrade --user crispy # Python 2
        
        After the installation finishes, you should be able to start the program from the command line:
        
        .. code:: sh
        
            crispy
        
        If you are having problems running the previous command, it is probably due to not having your PATH environment variable set correctly.
        
        .. code:: sh
        
            export PATH=$HOME/.local/bin:$PATH
        
        Just as in the case of using the package installers, this will install the latest release, and not the development version (see below). Also, please note that when you install Crispy using pip, external programs needed to run the calculations have to be installed and their path must be set in the interface (preferred way) or using the PATH environment variable.
        
        Development Version
        -------------------
        
        Using pip
        *********
        Assuming that you have a working Python distribution (version 3.5 or greater), you can easily install the development version of Crispy using pip:
        
        .. code:: sh
        
            pip install --upgrade --user https://github.com/mretegan/crispy/tarball/master
        
        It is possible, although unlikely, that this version requires features that are not yet available with the pip installable version of silx. In this case you have to also install the development version of silx. This is not always a very simple task, especially on Windows, but there is extensive `documentation <http://www.silx.org/doc/silx/latest>`_ on how to do it.
        
        Running from Source
        *******************
        As an alternative to the pip installation above, you can download the source code from GitHub either as an `archive <https://github.com/mretegan/crispy/archive/master.zip>`_ or using git, and run Crispy without installing it:
        
        .. code:: sh
        
            git clone https://github.com/mretegan/crispy.git
            cd crispy
            python -m crispy
        
        In this case the dependencies are not automatically installed and you will have to do it yourself:
        
        .. code:: sh
        
            pip install --user -r https://raw.githubusercontent.com/mretegan/crispy/master/requirements.txt
        
        .. third-marker
        
        Usage
        =====
        
        .. forth-marker
        
        If you have used the installers, Crispy should be easy to find and launch. For the installation using pip or if you are running directly from the source folder, follow the instructions from the **Installation** section.
        
        .. fifth-marker
        
        Citation
        ========
        Crispy is a scientific software. If you use it for a scientific publication, please cite the following reference (change the version number if required)::
        
            @misc{retegan_crispy,
              author       = {Retegan, Marius},
              title        = {Crispy: v0.7.3},
              year         = {2019},
              doi          = {10.5281/zenodo.1451209},
              url          = {https://zenodo.org/badge/latestdoi/53660512}
            }
        
        .. sixth-marker
        
        License
        =======
        The source code of Crispy is licensed under the MIT license.
        
        
Keywords: gui,spectroscopy,simulation,synchrotron,science
Platform: MacOS :: MacOS X
Platform: Microsoft :: Windows
Platform: POSIX :: Linux
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: X11 Applications :: Qt
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Scientific/Engineering :: Visualization
